services:
  # ----------- Common dependencies ------------
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: video_platform
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - '6379:6379'

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
      - xpack.ml.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
      - '9300:9300'

  # ----------- Microservices ------------

  account-service:
    build:
      context: ./services/account
      dockerfile: app.dockerfile
    container_name: account-service
    depends_on:
      - postgres
      - redis
      - kafka
    ports:
      - '4001:4000'
    env_file:
      - ./services/account/.env

  upload-service:
    build:
      context: ./services/upload
      dockerfile: app.dockerfile
    container_name: upload-service
    depends_on:
      - redis
      - kafka
    ports:
      - '4002:4000'
    env_file:
      - ./services/upload/.env

  transcode-service:
    build:
      context: ./services/transcode
      dockerfile: app.dockerfile
    container_name: transcode-service
    depends_on:
      - redis
      - kafka
    ports:
      - '4003:4000'
    env_file:
      - ./services/transcode/.env

  stream-service:
    build:
      context: ./services/stream
      dockerfile: app.dockerfile
    container_name: stream-service
    depends_on:
      - redis
    ports:
      - '4004:4000'
    env_file:
      - ./services/stream/.env

  video-service:
    build:
      context: ./services/video
      dockerfile: app.dockerfile
    container_name: video-service
    depends_on:
      - postgres
      - redis
      - kafka
    ports:
      - '4005:4000'
    env_file:
      - ./services/video/.env

  notification-service:
    build:
      context: ./services/notification
      dockerfile: app.dockerfile
    container_name: notification-service
    depends_on:
      - kafka
    ports:
      - '4006:4000'
    env_file:
      - ./services/notification/.env

  analytics-service:
    build:
      context: ./services/analytics
      dockerfile: app.dockerfile
    container_name: analytics-service
    depends_on:
      - postgres
      - redis
    ports:
      - '4007:4000'
    env_file:
      - ./services/analytics/.env

  search-service:
    build:
      context: ./services/search
      dockerfile: app.dockerfile
    container_name: search-service
    depends_on:
      - elasticsearch
      - kafka
      - redis
    ports:
      - '4008:4000'
    env_file:
      - ./services/search/.env

  graphql-gateway:
    build:
      context: ./graphql
      dockerfile: app.dockerfile
    container_name: graphql-gateway
    depends_on:
      - account-service
      - upload-service
      - transcode-service
      - stream-service
      - video-service
      - notification-service
      - analytics-service
      - search-service
    ports:
      - '4000:4000'
    env_file:
      - ./graphql/.env

volumes:
  postgres_data:
  esdata:
